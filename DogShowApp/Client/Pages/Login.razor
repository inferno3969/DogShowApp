@page "/login"
@using DogShowApp.Shared.Data
@using DogShowApp.Shared.Services
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager navigationManager

<PageTitle>Login</PageTitle>

<Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged" Pills FullWidth>
    <Items>
        <Tab Name="login">Login</Tab>
        <Tab Name="register">Register</Tab>
    </Items>
    <Content>
        <TabPanel Name="login">
            <Card>
                <CardBody>
                    <CardTitle>
                        Welcome Back, Please Login
                    </CardTitle>
                </CardBody>
                <CardBody>
                    <Validations @ref="@loginValidationsRef" Mode="ValidationMode.Manual" ValidateOnLoad="false">
                        <Validation Validator="ValidationRule.IsEmail">
                            <Field>
                                <FieldLabel>Email</FieldLabel>
                                <TextEdit @bind-Text="@email" Placeholder="Enter email...">
                                    <Feedback>
                                        <ValidationNone>Please Enter Your Email. </ValidationNone>
                                        <ValidationSuccess>Email is good</ValidationSuccess>
                                        <ValidationError>Please Enter A Valid Email</ValidationError>
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Validation Validator="ValidationRule.IsNotEmpty">
                            <Field>
                                <FieldLabel>Password</FieldLabel>
                                <TextEdit @bind-Text="@password" Placeholder="Enter Password.." />
                            </Field>
                        </Validation>
                        <Field>
                            <Check TValue="bool" @bind-Checked="@rememberMe">Remember Me</Check>
                        </Field>
                    </Validations>
                </CardBody>
                <CardBody>
                    <Button Color="Color.Primary" Clicked="@OnLoginClicked">Login</Button>
                    <Button Color="Color.Secondary">Forgot Password</Button>
                </CardBody>
            </Card>
        </TabPanel>
        <TabPanel Name="register">
            <Card>
                <CardBody>
                    <CardTitle>
                        New Here? Create An Account
                    </CardTitle>
                </CardBody>
                <CardBody>
                    <Validations Mode="ValidationMode.Auto" Model="@user">
                        <Validation>
                            <Field Horizontal>
                                <FieldLabel ColumnSize="ColumnSize.Is2">First Name</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <TextEdit Placeholder="First Name" @bind-Text="@user.FirstName">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </FieldBody>
                            </Field>
                        </Validation>
                        <Validation>
                            <Field Horizontal>
                                <FieldLabel ColumnSize="ColumnSize.Is2">Last Name</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <TextEdit Placeholder="Last Name" @bind-Text="@user.LastName">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </FieldBody>
                            </Field>
                        </Validation>
                        <Validation>
                            <Field Horizontal>
                                <FieldLabel ColumnSize="ColumnSize.Is2">Email</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <TextEdit Placeholder="Enter email" @bind-Text="@user.Email">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </FieldBody>
                            </Field>
                        </Validation>
                        <Validation>
                            <Field Horizontal>
                                <FieldLabel ColumnSize="ColumnSize.Is2">Password</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <TextEdit Role="TextRole.Password" Placeholder="Password" @bind-Text="@user.Password">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </FieldBody>
                            </Field>
                        </Validation>
                        <Validation>
                            <Field Horizontal>
                                <FieldLabel ColumnSize="ColumnSize.Is2">Re Password</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.Is10">
                                    <TextEdit Role="TextRole.Password" Placeholder="Retype password" @bind-Text="@user.ConfirmPassword">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </FieldBody>
                            </Field>
                        </Validation>
                    </Validations>

                </CardBody>
                <CardBody>
                    <Button Color="Color.Primary" Clicked="@OnRegisterClicked">
                        Create Account
                    </Button>
                </CardBody>
            </Card>
        </TabPanel>
    </Content>
</Tabs>


@code {

    public static User user = new User();

    List<User>? userList;

    Validations loginValidationsRef;
    Validations registerValidationsRef;

    string selectedTab = "register";

    string firstName;
    string lastName;
    string email;
    string password;
    string confirmPassword;
    bool rememberMe;

    private Task OnSelectedTabChanged(string name)
    {
        selectedTab = name;

        return Task.CompletedTask;
    }

    async Task OnLoginClicked()
    {
        userList = await Http.GetFromJsonAsync<List<User>>($"User?email={user.Email}&password={user.Password}");

        if (email == user.Email && password == user.Password)
        {
            navigationManager.NavigateTo("/userpage", true, true);
            user.isLoggedIn = true;
        }
        else
        {

        }

    }

    async Task OnRegisterClicked()
    {
        firstName = user.FirstName;
        lastName = user.LastName;
        email = user.Email;
        password = user.Password;

        HttpResponseMessage response = await Http.PostAsJsonAsync("User", user);
    }
}